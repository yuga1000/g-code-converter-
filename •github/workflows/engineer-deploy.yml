name: Ghostline Engineer CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment regardless of changes'
        required: false
        default: 'false'

env:
  NODE_VERSION: '18'

jobs:
  analyze:
    name: Code Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level moderate
    
    - name: Validate engineer configuration
      run: node -e "require('./engineer.js'); console.log('Engineer module validation successful')"

  deploy:
    name: Deploy to Railway
    runs-on: ubuntu-latest
    needs: analyze
    if: github.ref == 'refs/heads/main' || github.event.inputs.force_deploy == 'true'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --only=production
    
    - name: Configure Git for engineer
      run: |
        git config --global user.name "Ghostline Engineer"
        git config --global user.email "engineer@ghostline.system"
    
    - name: Install Railway CLI
      run: npm install -g @railway/cli
    
    - name: Deploy to Railway
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      run: |
        railway login --token $RAILWAY_TOKEN
        railway up --detach
    
    - name: Verify deployment
      run: |
        echo "Deployment completed at $(date)"
        echo "Engineer service should be running in pipeline mode"
    
    - name: Post-deployment notification
      if: success()
      run: |
        echo "âœ… Ghostline Engineer deployed successfully"
        echo "The autonomous engineering system is now active"

  engineer-cycle:
    name: Run Engineering Cycle
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.ENGINEER_TOKEN || secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Configure Git for automated commits
      run: |
        git config --global user.name "Ghostline Engineer"
        git config --global user.email "engineer@ghostline.system"
    
    - name: Execute single engineering cycle
      env:
        GITHUB_TOKEN: ${{ secrets.ENGINEER_TOKEN || secrets.GITHUB_TOKEN }}
      run: |
        node engineer.js
        
    - name: Check for automated improvements
      run: |
        if git diff --quiet; then
          echo "No automated improvements applied"
        else
          echo "Automated improvements were applied and committed"
        fi
